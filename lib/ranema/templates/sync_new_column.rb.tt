# frozen_string_literal: true

class <%= migration_class_name %> < ActiveRecord::Migration[<%= ActiveRecord::Migration.current_version %>]
  def up
    exec_query(<<~SQL.squish)
      CREATE OR REPLACE FUNCTION <%= trigger_name %>() RETURNS trigger
      LANGUAGE plpgsql VOLATILE
      AS $$
      BEGIN
        NEW.<%= new_column_name %> := NEW.<%= old_column_name %>;
        RETURN NEW;
      END;
      $$;
    SQL

    exec_query(<<~SQL.squish)
      CREATE TRIGGER <%= trigger_name %>
      BEFORE INSERT OR UPDATE OF <%= old_column_name %>
      ON <%= table_name %>
      FOR EACH ROW
      WHEN (pg_trigger_depth() = 0)
      EXECUTE PROCEDURE <%= trigger_name %>();
    SQL
  end

  def down
    exec_query(<<~SQL.squish)
      DROP FUNCTION IF EXISTS <%= trigger_name %> CASCADE;
    SQL
  end
end
